// Вычислить размер коллстэка в основных браузерах: Chrome, Firefox, Opera и Safari (если есть возможность).

let counter = 0;

// будем рекурсивно вызывать функцию и увлечивать счётчик на 1, через try/catch вызываем бесконечную функцию, в случае ошибки выводим счётчик и ощибку, чтобы проверить, что функция прервалась именно из-за переполнения колстэка, получаем что наша функция вызвалась count раз, то есть объём колстэка равен count * на x(объём памяти, который занимает функция)
const reverseFunction = () => {
  counter++;
  reverseFunction();
};

// чтобы найти x нам необходимо 2ое уравнение, известно что числа в js представлены в 64битном формате, то есть 1 чило = 8 байт, рекурсивно вызываем функцию аналогичную предыдущей только с объявлением численной переменной, смотрим сколько раз она вызвалась, также с помощью конструкции try/catch, тогда объём колстэка равен count * на x + 8
const reverseFunctionWithNumber = () => {
  counter++;
  let a = 1;
  reverseFunctionWithNumber();
};

// Для проверки предсказательной модели использовала функцию с 2 переменными, расчитывала исходя из посчитанного из 2 предудущих функций объёма колстэка, сколько раз должна вызваться функция, сверялась

const reverseFunctionWithTwoNumbers = () => {
  counter++;
  let a = 1;
  let b = 2;
  reverseFunctionWithNumber();
};


// в try/catch подставляла разные функции
try {
  reverseFunction();
} catch (err) {
  console.log(counter);
  console.log(err);
}

// Ниже приведены расчёты для разных браузеров

// Chrome
// reverseFunction - 13950 раз
// reverseFunctionWithNumber - 12555 раз

// 13950x = 12555(x + 8)
// 1395x = 100440
// x = 72 байт => * на 13950 и получаеам объём колстека 1003752 байт ~ 1 МБайт

// Проверка
// 2 number 1003752 = n(72 + 16)
// 11406

// Firefox
// Почему-то в Firefox получались всё время разные значения, с чем это связано так и не поняла, в других браузерах всё стабильно, брала средние значения
// reverseFunction - 71707 раз
// reverseFunctionWithNumber -  64651 раз

// 71707x = 64651(x + 8)
// 7056x = 517208
// x = 73 байт => * на 71707 и получаеам объём колстека 5234611 байт ~ 5,2 МБайт

// Opera
// reverseFunction - 13950 раз
// reverseFunctionWithNumber - 12555 раз

// 13950x = 12555(x + 8)
// 1395x = 100440
// x = 72 байт => * на 13950 и получаеам объём колстека 1003752 байт ~ 1 МБайт

// Safari
// reverseFunction - 45631 раз
// reverseFunctionWithNumber - 39927 раз

// 45631x = 39927(x + 8)
// 5704x = 319416
// x = 56 байт => * на 45631 и получаеам объём колстека 2555336 байт ~ 2,5 МБайт
